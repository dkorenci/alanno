services:
    backend:
        build:
            dockerfile: deployment/django.dev.dockerfile
            context: .
        environment:
            DJANGO_SECRET_KEY: "secret"
            DJANGO_DEBUG: "True"
            DJANGO_ADMIN_EMAIL: ${DJANGO_ADMIN_EMAIL}
            DJANGO_ADMIN_PASSWORD: ${DJANGO_ADMIN_PASSWORD}
            CELERY_BROKER: "redis://redis:6379/0"
            CELERY_BACKEND: "redis://redis:6379/0"
        deploy:
          resources:
            reservations:
              devices:
                - driver: nvidia
                  capabilities: [gpu]
        ports:
            - 8000:8000
        depends_on:
            - database
            - redis
            - memcached
        volumes:
            - .:/app
            - django_static:/var/www/alanno/static/
        env_file:
            - .env

    database:
        image: postgres:12
        environment:
            POSTGRES_DB: "alanno_db"
            POSTGRES_USER: "postgres"
            POSTGRES_PASSWORD: "postgres"
        volumes:
            - postgres_persistence:/var/lib/postgresql/data

    frontend:
        build:
            dockerfile: deployment/webpack.dev.dockerfile
            context: .
        volumes:
            - ./server:/app
        depends_on:
            - backend

    celery_default:
        build:
            dockerfile: deployment/django.dev.dockerfile
            context: .
        command: celery -A app worker -l INFO -Q celery
        depends_on:
            - backend
            - redis
            - memcached
        volumes:
            - .:/app
            - django_static:/var/www/alanno/static/
        env_file:
            - .env

    celery_al:
        build:
            dockerfile: deployment/django.dev.dockerfile
            context: .
        command: celery -A app worker -l INFO -Q al_loop --pool=solo
        deploy:
          resources:
            reservations:
              devices:
                - driver: nvidia
                  capabilities: [gpu]
        depends_on:
            - backend
            - redis
            - memcached
        volumes:
            - .:/app
            - django_static:/var/www/alanno/static/
        env_file:
            - .env

    redis:
        image: "redis:alpine"

    memcached:
        image: "memcached"
        entrypoint:
            - memcached
            - -m 64

volumes:
    django_static: null
    postgres_persistence: null
